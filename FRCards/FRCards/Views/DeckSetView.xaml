<?xml version="1.0" encoding="UTF-8"?>
<ContentView xmlns="http://xamarin.com/schemas/2014/forms" 
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:local="clr-namespace:FRCards.Views"
             xmlns:conv="clr-namespace:FRCards.Converters"
             xmlns:vm="clr-namespace:FRCards.ViewModels"
             xmlns:trg="clr-namespace:FRCards.Triggers"
             x:Name="thisDeckSetView"
             HorizontalOptions="Fill"
             Padding="0"
             Margin="0"
             BackgroundColor="{Binding SetRiderType, Converter={StaticResource RiderTypeToBackgroundColor}}" 
             BindingContext="{x:Static vm:DesignTimeViewModels.DesignRouleurDeckSetViewModel}"
             x:Class="FRCards.Views.DeckSetView">
    <ContentView.Resources>
        <ResourceDictionary>
            <conv:RiderTypeToBackgroundColorConverter x:Key="RiderTypeToBackgroundColor" />
        </ResourceDictionary>
    </ContentView.Resources>
    <ContentView.Triggers>
        <DataTrigger TargetType="local:DeckSetView" Binding="{Binding CanSelect}" Value="True">
            <DataTrigger.EnterActions>
                <trg:AnimateCardsFromActiveDeckAction />
            </DataTrigger.EnterActions>
            <DataTrigger.ExitActions>
                <trg:AnimateCardsFromSelectionToUsedAndSelected />
            </DataTrigger.ExitActions>
        </DataTrigger>
        <DataTrigger TargetType="local:DeckSetView" Binding="{Binding CanFinishRound}" Value="True">
            <DataTrigger.EnterActions>
                <trg:AnimateCardsToFinishingPositionsAction />
            </DataTrigger.EnterActions>
            <DataTrigger.ExitActions>
                <trg:AnimateCardsFromFinishingChoicesToDecksAction />
            </DataTrigger.ExitActions>
        </DataTrigger>
    </ContentView.Triggers>
    <ContentView.Content>
        <Grid x:Name="contentGrid" HorizontalOptions="Start" Padding="0" Margin="30" AnchorX="0.0" AnchorY="0.0">
            <Grid.RowDefinitions>
                <RowDefinition Height="45" />
                <RowDefinition Height="280" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="180" />
                <ColumnDefinition Width="180" />
                <ColumnDefinition Width="460" />
                <ColumnDefinition Width="180" />
            </Grid.ColumnDefinitions>
            <Label Grid.Row="0" Grid.ColumnSpan="4" BindingContext="{x:Reference thisDeckSetView}" Text="{Binding Rider}" FontSize="Large" HorizontalOptions="Center"/>
            <local:DeckGrid x:Name="activeDeckGrid" Grid.Row="1" Grid.Column="1" BindingContext="{Binding ActiveDeck}" IsTappable="{Binding Source={x:Reference thisDeckSetView}, Path=BindingContext.CanDrawCards}">
                <local:DeckGrid.GestureRecognizers>
                    <TapGestureRecognizer NumberOfTapsRequired="1" Command="{Binding Source={x:Reference thisDeckSetView}, Path=BindingContext.DrawCardsCommand}"/>
                </local:DeckGrid.GestureRecognizers>
            </local:DeckGrid>
            <Grid x:Name="selectionCardsGrid" Grid.Row="1" Grid.Column="2" HorizontalOptions="Center" VerticalOptions="Center">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <local:CardView x:Name="selectionCardView2" Grid.Row="0" Grid.Column="2" IsVisibleWithoutAnimation="False" IsTappable="True">
                    <local:CardView.GestureRecognizers>
                        <TapGestureRecognizer NumberOfTapsRequired="1" Command="{Binding Source={x:Reference thisDeckSetView}, Path=BindingContext.SelectCardCommand}" CommandParameter="2" />
                    </local:CardView.GestureRecognizers>
                </local:CardView>
                <local:CardView x:Name="selectionCardView1" Grid.Row="0" Grid.Column="1" IsVisibleWithoutAnimation="False" IsTappable="True">
                    <local:CardView.GestureRecognizers>
                        <TapGestureRecognizer NumberOfTapsRequired="1" Command="{Binding Source={x:Reference thisDeckSetView}, Path=BindingContext.SelectCardCommand}" CommandParameter="1" />
                    </local:CardView.GestureRecognizers>
                </local:CardView>
                <local:CardView x:Name="selectionCardView0" Grid.Row="0" Grid.Column="0" IsVisibleWithoutAnimation="False" IsTappable="True">
                    <local:CardView.GestureRecognizers>
                        <TapGestureRecognizer NumberOfTapsRequired="1" Command="{Binding Source={x:Reference thisDeckSetView}, Path=BindingContext.SelectCardCommand}" CommandParameter="0" />
                    </local:CardView.GestureRecognizers>
                </local:CardView>
            </Grid>
            <local:DeckGrid x:Name="usedDeckGrid" Grid.Row="1" Grid.Column="0" BindingContext="{Binding UsedCards}" IsTappable="False" />
            <local:CardView x:Name="selectedCardView" Grid.Row="1" Grid.Column="2" HorizontalOptions="Center" VerticalOptions="Center" BindingContext="{Binding SelectedCard}" IsTappable="{Binding Source={x:Reference thisDeckSetView}, Path=BindingContext.CanFinishRound}" IsVisible="false" />
            <Grid x:Name="finishingCardGrid" Grid.Row="1" Grid.Column="2" HorizontalOptions="Center" VerticalOptions="Center" IsVisible="False">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <local:CardView x:Name="finishedCardWithExhaustion" Grid.Row="0" Grid.Column="0" BindingContext="{Binding SelectedCard}" IsTappable="{Binding Source={x:Reference thisDeckSetView}, Path=BindingContext.CanFinishRound}" TranslationX="25" Margin="0, 0, 40, 0">
                    <local:CardView.GestureRecognizers>
                        <TapGestureRecognizer NumberOfTapsRequired="1" Command="{Binding Source={x:Reference thisDeckSetView}, Path=BindingContext.FinishRoundWithExhaustionCommand}" />
                    </local:CardView.GestureRecognizers>
                </local:CardView>
                <local:CardView x:Name="finishedExhaustionCard" Grid.Row="0" Grid.Column="0" BindingContext="{Binding DisplayExhaustionCard}" IsVisible="{Binding Source={x:Reference thisDeckSetView}, Path=BindingContext.CanFinishRound}" IsTappable="{Binding Source={x:Reference thisDeckSetView}, Path=BindingContext.CanFinishRound}" TranslationX="-25" Margin="0, 0, 40, 0">
                    <local:CardView.GestureRecognizers>
                        <TapGestureRecognizer NumberOfTapsRequired="1" Command="{Binding Source={x:Reference thisDeckSetView}, Path=BindingContext.FinishRoundWithExhaustionCommand}" />
                    </local:CardView.GestureRecognizers>
                </local:CardView>
                <local:CardView x:Name="finishedCard" Grid.Row="0" Grid.Column="1" BindingContext="{Binding SelectedCard}" IsTappable="{Binding Source={x:Reference thisDeckSetView}, Path=BindingContext.CanFinishRound}" Margin="40, 0, 0, 0">
                    <local:CardView.GestureRecognizers>
                        <TapGestureRecognizer NumberOfTapsRequired="1" Command="{Binding Source={x:Reference thisDeckSetView}, Path=BindingContext.FinishRoundCommand}" />
                    </local:CardView.GestureRecognizers>
                </local:CardView>
            </Grid>
            <local:DeckGrid x:Name="discardedDeckGrid" Grid.Row="1" Grid.Column="3" BindingContext="{Binding Discarded}" IsTappable="False">
                <local:DeckGrid.GestureRecognizers>
                    <TapGestureRecognizer NumberOfTapsRequired="1" Command="{Binding Source={x:Reference thisDeckSetView}, Path=BindingContext.RequestGameResetCommand}"/>
                </local:DeckGrid.GestureRecognizers>
            </local:DeckGrid>
        </Grid>
  </ContentView.Content>
</ContentView>